{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prit\\\\OneDrive\\\\Desktop\\\\todo_mern\\\\client\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        todos: prevState.todos.map(t => {\n          if (t._id === action.payload) {\n            t.complete = !t.complete;\n          }\n\n          ;\n          return t;\n        })\n      };\n\n    case \"REMOVE\":\n      return {\n        todos: prevState.todos.filter(todo => todo._id !== action.payload)\n      };\n\n    case \"ADD\":\n      return {\n        todos: [...prevState.todos, action.payload]\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nexport class Provider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: [],\n      dispatch: action => this.setState(prevState => reducer(prevState, action))\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/todos').then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: this.state,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["C:/Users/Prit/OneDrive/Desktop/todo_mern/client/src/context.js"],"names":["React","Component","axios","Context","createContext","reducer","prevState","action","type","todos","map","t","_id","payload","complete","filter","todo","Provider","state","dispatch","setState","componentDidMount","get","then","res","data","render","props","children","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAmB,OAAnB;;AACA,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,MAAMC,OAAO,GAAE,CAACC,SAAD,EAAWC,MAAX,KAAoB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACA,aAAO;AAAEC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAE;AAAC,cAAIA,CAAC,CAACC,GAAF,KAAUL,MAAM,CAACM,OAArB,EAA8B;AAACF,YAAAA,CAAC,CAACG,QAAF,GAAa,CAACH,CAAC,CAACG,QAAhB;AAA0B;;AAAA;AAAE,iBAAOH,CAAP;AAAU,SAA7F;AAAT,OAAP;;AAEA,SAAK,QAAL;AACA,aAAO;AAAEF,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBM,MAAhB,CAAuBC,IAAI,IAAEA,IAAI,CAACJ,GAAL,KAAaL,MAAM,CAACM,OAAjD;AAAT,OAAP;;AAEA,SAAK,KAAL;AACA,aAAO;AAAEJ,QAAAA,KAAK,EAAE,CAAC,GAAGH,SAAS,CAACG,KAAd,EAAsBF,MAAM,CAACM,OAA7B;AAAT,OAAP;;AAEA;AACI,aAAOP,SAAP;AAXR;AAaH,CAdD;;AAgBA,OAAO,MAAMW,QAAN,SAAuBhB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACpCiB,KADoC,GAC5B;AACJT,MAAAA,KAAK,EAAG,EADJ;AAEJU,MAAAA,QAAQ,EAAEZ,MAAD,IAAU,KAAKa,QAAL,CAAcd,SAAS,IAAED,OAAO,CAACC,SAAD,EAAWC,MAAX,CAAhC;AAFf,KAD4B;AAAA;;AAKpCc,EAAAA,iBAAiB,GAAE;AACfnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,QAAV,EACCC,IADD,CACMC,GAAG,IAAI,KAAKJ,QAAL,CAAc;AAAEX,MAAAA,KAAK,EAAEe,GAAG,CAACC;AAAb,KAAd,CADb;AAEH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKR,KAA9B;AAAA,gBACK,KAAKS,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAfmC;AAkBxC,OAAO,MAAMC,QAAQ,GAAG1B,OAAO,CAAC0B,QAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from  \"axios\"\r\nconst Context = React.createContext()\r\n\r\nconst reducer =(prevState,action)=>{\r\n    switch(action.type){\r\n        case \"TOGGLE\":\r\n        return { todos: prevState.todos.map(t=>{if (t._id === action.payload) {t.complete = !t.complete }; return t }) }\r\n        \r\n        case \"REMOVE\":\r\n        return { todos: prevState.todos.filter(todo=>todo._id !== action.payload) }\r\n\r\n        case \"ADD\":\r\n        return { todos: [...prevState.todos , action.payload] }\r\n\r\n        default:\r\n            return prevState\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        todos : [],\r\n        dispatch:(action)=>this.setState(prevState=>reducer(prevState,action))\r\n    }\r\n    componentDidMount(){\r\n        axios.get('/todos')\r\n        .then(res => this.setState({ todos: res.data}))\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer"]},"metadata":{},"sourceType":"module"}